<?php
/**
 * TODO: Docs.
 * You know ... a web log!
 */
class Blog_PageTool extends PageTool {
	/**
	 * Called to output a single blog file, according to current URL.
	 * URLs have to be generated by the getUrl function - in this style:
	 * /Blog/2012/Feb/20/123-Blog+title.html (where 123 is the ID).
	 */
	public function go($api, $dom, $template, $tool) {
		$blogId = substr(FILE, 0, strpos(FILE, "-"));
		if(!is_numeric($blogId)) {
			throw new HttpError(400);
		}
		// TODO: Check date and title.

		$blog = $api["Blog"]->getById(array("Id" => $blogId));

		$dom["h1#blogTitle"]->text = $blog["Title"];
		$dom["span#blogDate time"]->text = date("jS F Y",
			strtotime($blog["Dt_Publish"]));
		$dom["span#blogDate time"]->datetime = date("Y-m-d",
			strtotime($blog["Dt_Publish"]));

		$dom["div#blogContent"]->html = $blog["Content"];
	}

	public function getUrl($blogObj) {
		$dtPublish = new DateTime($blogObj["Dt_Publish"]);
		$url = "/Blog/";
		$url .= $dtPublish->format("Y/M/j");
		$url .= "/" . $blogObj["Id"] . "-";
		$url .= urlencode($blogObj["Title"]);
		$url .= ".html";
		return $url;
	}

	/**
	 * Simply returns the blog's preview field and ensures a word isn't
	 * sliced in two.
	 */
	public function getPreview($blogObj) {
		$preview = strip_tags($blogObj["Content"]);

		$trimmed = (strlen($preview) > $blogObj["PreviewLength"]);

		$preview = substr($preview, 0, $blogObj["PreviewLength"]);
		$preview = substr($preview, 0, strrpos($preview, " "));

		if($trimmed) {
			$preview .= " ...";
		}
		return $preview;
	}

	public function outputLatest($output) {
		$blog = $this->_api["Blog"]->getLatest();

		$output["h1"]->text = $blog["Title"];
		$output["p.date"]->text = date("jS F Y",
			strtotime($blog["Dt_Publish"]));
		$output["p.blogPreview"]->text = $this->getPreview($blog);
		$output["a"]->href = $this->getUrl($blog);
	}
}
?>